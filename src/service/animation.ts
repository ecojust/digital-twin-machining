import Texture from "./texture";

export default class Animation {
  static async holeQueue(delay = 3000, onChange: Function) {
    const queue = [];
    queue.push([
      [100, 100],
      [100, 200],
    ]);
    queue.push([
      [100, 100],
      [100, 300],
    ]);
    queue.push([
      [100, 100],
      [100, 400],
    ]);

    queue.push([
      [100, 100],
      [100, 500],
    ]);
    queue.push([
      [100, 100],
      [100, 600],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 600],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 500],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 400],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 300],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 200],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [300, 100],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [400, 100],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [500, 100],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [600, 100],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [700, 100],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [700, 100],
      [700, 200],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [700, 100],
      [700, 300],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [700, 100],
      [700, 400],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [700, 100],
      [700, 500],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [700, 100],
      [700, 600],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [700, 100],
      [700, 700],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [700, 100],
      [700, 700],
      [600, 700],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [700, 100],
      [700, 700],
      [500, 700],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [700, 100],
      [700, 700],
      [400, 700],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [700, 100],
      [700, 700],
      [300, 700],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [700, 100],
      [700, 700],
      [300, 700],
      [300, 600],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [700, 100],
      [700, 700],
      [300, 700],
      [300, 500],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [700, 100],
      [700, 700],
      [300, 700],
      [300, 400],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [700, 100],
      [700, 700],
      [300, 700],
      [300, 300],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [700, 100],
      [700, 700],
      [300, 700],
      [300, 300],
      [200, 300],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [700, 100],
      [700, 700],
      [300, 700],
      [300, 300],
      [100, 300],
    ]);
    queue.push([
      [100, 100],
      [100, 700],
      [200, 700],
      [200, 100],
      [700, 100],
      [700, 700],
      [300, 700],
      [300, 300],
      [60, 300],
    ]);
    // queue.push([
    //     [100, 100],
    //     [100, 700],
    //     [200, 700],
    //     [200, 100],
    //     [700, 100],
    //     [300, 700],

    //   ]);
    // queue.push([
    //   [100, 100],
    //   [100, 700],
    //   [200, 700],
    //   [200, 100],
    //   [700, 100],
    //   [200, 700],
    // ]);
    // queue.push([
    //   [100, 100],
    //   [100, 700],
    //   [200, 700],
    //   [200, 100],
    //   [700, 100],
    //   [700, 700],
    //   [300, 700],
    //   [500, 200],
    // ]);
    await visbox.Tool.sleep(5000);

    for (const q of queue) {
      console.log("q", q);
      const canvas = Texture.drawPath(q, 40);
      onChange(canvas);
      await visbox.Tool.sleep(delay);
    }
  }
}
